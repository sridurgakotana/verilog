// DESIGN CODE
// 2 bit comparator behaviour model
module comparator(a,b,g,e,l);
  input[1:0] a,b;
  output reg g,e,l;
  always@(a or b)
    begin
      if(a>b)
        begin
          g=1'b1;
          e=1'b0;
          l=1'b0;
        end
      else if(a<b)
        begin
          g=1'b0;
          e=1'b0;
          l=1'b1;
        end
      else
        begin
          g=1'b0;
          e=1'b1;
          l=1'b0;
        end
    end
endmodule

// TESTBENCH CODE
module tb;
  reg [1:0] a;
  reg [1:0] b;
  wire g,e,l;
  comparator u1(.g(g),.e(e),.l(l),.a(a),.b(b));
  initial
    begin
          a=2'b00;b=2'b00;
     #20; a=2'b01;b=2'b00;
     #20; a=2'b00;b=2'b10;
    end
  initial
    begin
      $monitor("a=%b,b=%b,g=%0b,e=%0b,l=%0b",a,b,g,e,l);
    end
endmodule

// OUTPUT
          a=00,b=00,g=0,e=1,l=0
# KERNEL: a=01,b=00,g=1,e=0,l=0
# KERNEL: a=00,b=10,g=0,e=0,l=1
# KERNEL: Simulation has finishe
