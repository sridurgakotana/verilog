// DESIGN CODE
// 2:1MULTIPLEXER
module mux(s, a, f);
  input [3:0] a;
  input [1:0] s;
  output reg f;

  always @(*) begin
    case (s)
      2'b00: f = a[0];
      2'b01: f = a[1];
      2'b10: f = a[2];
      2'b11: f = a[3];
      default: f = 1'bx;
    endcase
  end
endmodule

// TESTBENCH CODE
module tb;
  reg [3:0] a;
  reg [1:0] s;
  wire f;

  mux u1 (.f(f), .a(a), .s(s));

  initial begin
    a = 4'b1011;   // a[3]=1, a[2]=0, a[1]=1, a[0]=1
    s = 2'b00;
    #10 s = 2'b01;
    #10 s = 2'b10;
    #10 s = 2'b11;
    #10 $finish;   // <-- very important
  end

  initial begin
    $monitor("t=%0t, s=%b, f=%b", $time, s, f);
  end
endmodule

//OUTPUT
          t=0, s=00, f=1
# KERNEL: t=10, s=01, f=1
# KERNEL: t=20, s=10, f=0
# KERNEL: t=30, s=11, f=1
