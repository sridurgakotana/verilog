// DESIGN CODE
// 4 bit ALU Design code
module alu (a,b,alu_sel, alu_out);
  input [3:0] a,b;
  input [3:0] alu_sel;
  output reg [4:0] alu_out;
  
  always@(*) begin
    case(alu_sel)
      4'b0000: alu_out = a + b;
      4'b0001: alu_out = a - b;
      4'b0010: alu_out = a * b;
      4'b0011: alu_out = a / b;
      4'b0100: alu_out = a % b;
      4'b0101: alu_out = !a;
      4'b0110: alu_out = a & b;
      4'b0111: alu_out = a | b;a
      4'b1000: alu_out = a << b;
      4'b1001: alu_out = a >> b;
      4'b1010: alu_out = ~(a & b);
      4'b1011: alu_out = ~(a | b);
      4'b1100: alu_out = ~(a ^ b);
      4'b1101: alu_out = ~(a ^ b);
      4'b1110: alu_out = (a == b)?1'b1:1'b0;
      4'b1111: alu_out = {a[0], a[3:1]};
       default: alu_out = 5'b00000;
    endcase
  end
endmodule



// TESTBENCH
module tb;
  reg [3:0] a,b;
  reg [3:0] alu_sel;
  wire [4:0] alu_out;
  alu u1(.alu_out(alu_out),.alu_sel(alu_sel),.a(a),.b(b));
  
  initial begin
    a = 4'b0110; b = 4'b0011;
    
    alu_sel = 4'b0000; #10;
        alu_sel = 4'b0000; #10;
        alu_sel = 4'b0001; #10;
        alu_sel = 4'b0010; #10;
        alu_sel = 4'b0011; #10;
        alu_sel = 4'b0100; #10;
        alu_sel = 4'b0101; #10;
        alu_sel = 4'b0110; #10;
        alu_sel = 4'b0111; #10;
        alu_sel = 4'b1000; #10;
        alu_sel = 4'b1010; #10;
        alu_sel = 4'b1011; #10;
        alu_sel = 4'b1100; #10;
        alu_sel = 4'b1101; #10;
        alu_sel = 4'b1111; #10;
  end
  initial begin
    $monitor("a=%0d, b=%0d, alu_sel=%0d, alu_out=%0d",a, b, alu_sel, alu_out);
  end
endmodule


OUTPUT:
          a=6, b=3, alu_sel=0, alu_out=9
# KERNEL: a=6, b=3, alu_sel=1, alu_out=3
# KERNEL: a=6, b=3, alu_sel=2, alu_out=18
# KERNEL: a=6, b=3, alu_sel=3, alu_out=2
# KERNEL: a=6, b=3, alu_sel=4, alu_out=0
# KERNEL: a=6, b=3, alu_sel=5, alu_out=0
# KERNEL: a=6, b=3, alu_sel=6, alu_out=2
# KERNEL: a=6, b=3, alu_sel=7, alu_out=7
# KERNEL: a=6, b=3, alu_sel=8, alu_out=16
# KERNEL: a=6, b=3, alu_sel=10, alu_out=29
# KERNEL: a=6, b=3, alu_sel=11, alu_out=24
# KERNEL: a=6, b=3, alu_sel=12, alu_out=26
# KERNEL: a=6, b=3, alu_sel=13, alu_out=26
# KERNEL: a=6, b=3, alu_sel=15, alu_out=3
         







      
