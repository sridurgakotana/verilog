// DESIGN CODE
//Binary to Gray Code
module binary_to_gray (b,g);
  input [3:0] b;
  output [3:0] g;
  assign g[3] = b[3];
  assign g[2] = b[3] ^ b[2];
  assign g[1] = b[2] ^ b[1];
  assign g[0] = b[1] ^ b[0];
endmodule

// TESTBECH CODE
module tb;
  reg [3:0] b;
  wire [3:0] g;
  binary_to_gray u1 (.b(b),.g(g));
  
  initial begin
    b = 4'b1010; #10;
    b = 4'b0111; #10;
    b = 4'b0010; #10;
    b = 4'b0011; #10;
  end
  
  initial begin
    $monitor("b = %b, g = %b",b,g);
  end
endmodule

b = 1010, g = 1111
# KERNEL: b = 0111, g = 0100
# KERNEL: b = 0010, g = 0011
# KERNEL: b = 0011, g = 0010
